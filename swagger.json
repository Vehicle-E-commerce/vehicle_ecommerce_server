{
  "openapi": "3.0.3",
  "info": {
    "title": "API de Veículos",
    "description": "Documentação da API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/announcement": {
      "post": {
        "summary": "Cria um novo anúncio",
        "description": "Cria um novo anúncio com as informações fornecidas",
        "tags": ["Announcement"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Anúncio criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/AnnouncementResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Lista todos os anúncios",
        "description": "Retorna uma lista de todos os anúncios cadastrados",
        "tags": ["Announcement"],
        "responses": {
          "200": {
            "description": "Lista de anúncios recuperados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnouncementResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/announcement/{id}": {
      "patch": {
        "summary": "Atualiza um anúncio existente",
        "description": "Atualiza um anúncio existente com as informações fornecidas",
        "tags":["Announcement"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do anúncio a ser atualizado",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Anúncio atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementResponse"
                }
              }
            }
          },
          "404": {
            "description": "Anúncio não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Remove um anúncio existente",
        "description": "Remove um anúncio existente com o ID fornecido",
        "tags":["Announcement"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do anúncio a ser removido",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Anúncio removido com sucesso"
          },
          "404": {
            "description": "Anúncio não encontrado"
          }
        }
      }
    },
    "/announcement/{id}/images": {
      "post": {
        "summary": "Adiciona uma imagem a um anúncio existente",
        "description": "Adiciona uma nova imagem a um anúncio existente com o ID fornecido",
        "tags":["Announcement"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do anúncio ao qual a imagem será adicionada",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "description": "Imagem que será adicionada ao anúncio"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Imagem adicionada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Announcement"
                }
              }
            }
          },
          "404": {
            "description": "Anúncio não encontrado"
          }
        }
      }
    },
    "/announcement/{id}/images/{imageId}": {
      "delete": {
        "summary": "Remove uma imagem de um anúncio existente",
        "description": "Remove uma imagem de um anúncio existente com o ID fornecido",
        "tags":["Announcement"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do anúncio ao qual a imagem pertence",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "path",
            "name": "imageId",
            "description": "ID da imagem a ser removida",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Imagem removida com sucesso"
          },
          "404": {
            "description": "Anúncio ou imagem não encontrados"
          }
        }
      }
    },
    "/user": {
      "post": {
        "summary": "Cria um novo usuário",
        "description": "Cria um novo usuário com as informações fornecidas",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cannot make an empty post"
          },
          "404": {
            "description": "User email already exists"
          }
        }
      },
      "get": {
        "summary": "Dados do próprio usuário",
        "description": "Retorna todos os dados do usuário",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "Dados recuperados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "summary": "Atualiza o próprio usuário",
        "description": "Atualiza o usuário existente com informações fornecidas",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref":"#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Apaga a conta do usuário",
        "description": "Apaga o próprio usuário",
        "tags":["User"],
        "responses": {
          "204": {
            "description": "Usuário apagado com sucesso"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnnouncementResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID do anúncio"
          },
          "title": {
            "type": "string",
            "description": "Título do anúncio"
          },
          "year": {
            "type": "number",
            "description": "Ano do veículo no anúncio"
          },
          "mileage": {
            "type": "number",
            "description": "Milhas do veículo no anúncio"
          },
          "price": {
            "type": "number",
            "format": "double",
            "description": "Preço do anúncio"
          },
          "bio": {
            "type": "string",
            "description": "Descrição do veículo no anúncio"
          },
          "is_motorbike": {
            "type": "boolean",
            "description": "Tipo de veículo do anúncio"
          },
          "cover_image": {
            "type": "string",
            "description": "Imagem capa do anúncio"
          },
          "user_id": {
            "type": "string",
            "description": "Usuário dono do anúncio"
          },
          "auction_announcements_id": {
            "type": "string",
            "description": "Dados de leilão do anúncio"
          },
          "images": {
            "type": "array",
            "description": "Imagens do anúncio",
            "items": {
              "type": "object",
              "properties": {
                "announcement_id": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                }
              }
            }
          },
          "comments": {
            "type": "array",
            "description": "Comentários do anúncio",
            "items": {
              "type":"object",
              "properties": {
                "user_id": {
                  "type": "string"
                },
                "announcement_id":{
                  "type": "string"
                },
                "comment": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "AnnouncementRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Título do anúncio"
          },
          "year": {
            "type": "number",
            "description": "Ano do veículo no anúncio"
          },
          "mileage": {
            "type": "number",
            "description": "Milhas do veículo no anúncio"
          },
          "price": {
            "type": "number",
            "format": "double",
            "description": "Preço do anúncio"
          },
          "bio": {
            "type": "string",
            "description": "Descrição do veículo no anúncio"
          },
          "is_motorbike": {
            "type": "boolean",
            "description": "Tipo de veículo do anúncio"
          },
          "cover_image": {
            "type": "string",
            "description": "Imagem capa do anúncio"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID do usuário"
          },
          "name": {
            "type": "string",
            "description": "Nome do usuário",
            "example": "Juliana Santos"
          },
          "email": {
            "type": "string",
            "description": "Email do usuário",
            "example": "juliana@email.com"
          },
          "cpf": {
            "type": "string",
            "description": "CPF do usuário",
            "example": "12345678910"
          },
          "telephone": {
            "type": "string",
            "description": "Contato do usuário",
            "example": "92994939291"
          },
          "birth_date": {
            "type": "string",
            "description": "Data de nascimento do usuário",
            "example": "2000-03-09"
          },
          "bio": {
            "type": "string",
            "description": "Descrição do usuário",
            "example": "Este usuário é muito legal"
          },
          "is_advertiser": {
            "type": "boolean",
            "description": "Verificação se o usuário é anunciante"
          },
          "created_at": {
            "type": "string",
            "description": "Data de criação do usuário",
            "example": "2023-03-03 12:16:30"
          },
          "updated_at": {
            "type": "string",
            "description": "Data de atualização do usuário",
            "example": "2023-03-03 13:21:12"
          },
          "address": {
            "type": "object",
            "description": "Endereço do usuário",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "cep": {
                "type": "string",
                "example": "69099000"
              },
              "state": {
                "type": "string",
                "example": "Amazonas"
              },
              "city": {
                "type": "string",
                "example": "Manaus"
              },
              "road": {
                "type": "string",
                "example": "Santa Margarida"
              },
              "number": {
                "type": "string",
                "example": "00"
              },
              "complement": {
                "type": "string",
                "example": "Casa"
              },
              "created_at": {
                "type": "string",
                "example": "2023-03-03 12:16:30"
              },
              "updated_at": {
                "type": "string",
                "example": "2023-03-03 12:16:30"
              }
            }
          }
        }
      },
      "UserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do usuário",
            "example": "Juliana Santos"
          },
          "email": {
            "type": "string",
            "description": "Email do usuário",
            "example": "juliana@email.com"
          },
          "cpf": {
            "type": "string",
            "description": "CPF do usuário",
            "example": "12345678910"
          },
          "telephone": {
            "type": "string",
            "description": "Contato do usuário",
            "example": "92994939291"
          },
          "birth_date": {
            "type": "string",
            "description": "Data de nascimento do usuário",
            "example": "2000-03-09"
          },
          "bio": {
            "type": "string",
            "description": "Descrição do usuário",
            "example": "Este usuário é muito legal"
          },
          "is_advertiser": {
            "type": "boolean",
            "description": "Verificação se o usuário é anunciante"
          },
          "password": {
            "type": "string",
            "description": "Senha do usuário",
            "example": "********"
          },
          "confirm_password": {
            "type": "string",
            "description": "Verificação se a senha está correta",
            "example": "********"
          },
          "address": {
            "type": "object",
            "description": "Endereço do usuário",
            "properties": {
              "cep": {
                "type": "string",
                "example": "69099000"
              },
              "state": {
                "type": "string",
                "example": "Amazonas"
              },
              "city": {
                "type": "string",
                "example": "Manaus"
              },
              "road": {
                "type": "string",
                "example": "Santa Margarida"
              },
              "number": {
                "type": "string",
                "example": "00"
              },
              "complement": {
                "type": "string",
                "example": "Casa"
              }
            }
          }
        }
      }
    }
  }
}
